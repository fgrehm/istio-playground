#!/usr/bin/env bash

set -eu -o pipefail

source lib/all.sh

START_TIME=`date "+%s"`

bootstrap::cluster

namespace="ig-plain-http"
apps::deploy-httpbin "${namespace}"

ns_tld="${namespace}.$(ingress::fetch-host)"
host="httpbin.${ns_tld}"

echo_title "Configuring httpbin ingress"
kubectl apply -n "${namespace}" -f - <<EOF | ensure_indent
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: ns-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*.${ns_tld}"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin
spec:
  hosts:
  - "${host}"
  gateways:
  - ns-gateway
  http:
  - match:
    - uri:
        prefix: /status
    - uri:
        prefix: /delay
    - uri:
        prefix: /headers
    route:
    - destination:
        port:
          number: 8000
        host: httpbin
EOF

url="http://${host}:$(ingress::fetch-port)/status/200"
echo_title "Testing plain HTTP ingress to ${url}"

curl -vsSfL "${url}" 2>&1 \
  | tee /tmp/istio-playground-httpbin-status \
  | ensure_indent

if ! grep -q 'server: istio-envoy' /tmp/istio-playground-httpbin-status; then
  fail 'Request was not processed by the ingressgateway'
fi

END_TIME=`date "+%s"`

echo_title "Total time: $((${END_TIME} - ${START_TIME}))s"
