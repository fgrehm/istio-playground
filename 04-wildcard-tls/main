#!/usr/bin/env bash

set -eu -o pipefail

source 00-common/shared.sh

START_TIME=`date "+%s"`

configure-cluster

echo "### Deploy httpbin"
kubectl create ns httpbin-tls 2>/dev/null || echo "httpbin-tls namespace already exists"
kubectl label namespace httpbin-tls istio-injection=enabled --overwrite
kubectl apply -n httpbin-tls -f 00-common/httpbin.yaml
until kubectl wait --for=condition=available deployment/httpbin -n httpbin-tls; do sleep 1; done 2>/dev/null
istioctl analyze -n httpbin-tls
echo

ingress_host="$(fetch-ingress-host)"
ingress_port="$(fetch-ingress-port)"
secure_ingress_port="$(fetch-secure-ingress-port)"

echo "### Generate CA root certs for ${ingress_host}"
mkdir -p certs/
openssl req -x509 \
            -sha256 \
            -nodes \
            -days 365 \
            -newkey rsa:2048 \
            -subj "/CN=${ingress_host}" \
            -keyout "/host/certs/${ingress_host}.key" \
            -out "/host/certs/${ingress_host}.crt"

openssl req -out "/host/certs/httpbin.${ingress_host}.csr" \
            -newkey rsa:2048 \
            -nodes \
            -keyout "/host/certs/httpbin.${ingress_host}.key" \
            -subj "/CN=httpbin.${ingress_host}"

openssl x509 -req \
             -sha256 \
             -days 365 \
             -CA "/host/certs/${ingress_host}.crt" \
             -CAkey "/host/certs/${ingress_host}.key" \
             -set_serial 0 \
             -in "/host/certs/httpbin.${ingress_host}.csr" \
             -out "/host/certs/httpbin.${ingress_host}.crt"

set -x
sudo chown "${USER}:" certs/
set +x

echo "### Configuring gateway"
kubectl -n httpbin-tls create secret tls httpbin-tls \
                                         "--key=/host/certs/httpbin.${ingress_host}.key" \
                                         "--cert=/host/certs/httpbin.${ingress_host}.crt"

kubectl apply -n httpbin-tls -f - <<EOF
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: httpbin
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: httpbin-tls # must be the same as secret
    hosts:
    - "httpbin.${ingress_host}"
EOF

kubectl apply -n httpbin-tls -f - <<EOF
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin
spec:
  hosts:
  - "httpbin.${ingress_host}"
  gateways:
  - httpbin
  http:
  - match:
    - uri:
        prefix: /status
    - uri:
        prefix: /delay
    - uri:
        prefix: /headers
    route:
    - destination:
        port:
          number: 8000
        host: httpbin
EOF

plain_url="http://httpbin.${ingress_host}:${ingress_port}"
echo "### Testing plain HTTP httpbin (${plain_url})"
curl -sSfL "${plain_url}/headers"

secure_url="https://httpbin.${ingress_host}:${secure_ingress_port}"
echo "### Testing secure httpbin (${secure_url})"
curl -sSfL --cacert "certs/${ingress_host}.crt" \
           "${secure_url}/headers"

END_TIME=`date "+%s"`

echo "### Setup time: $((${END_TIME} - ${START_TIME}))s"
