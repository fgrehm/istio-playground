#!/usr/bin/env bash

# Based on https://github.com/mrchrd/k3s-quickstart/blob/e664684a6857764138a245c55b17eb6b582b9929/run.sh

set -eu -o pipefail

EXEC='docker-compose exec server sh -c'
ISTIOCTL='docker-compose run --rm istioctl'

START_TIME=`date "+%s"`

echo '### Setup k3s'
docker-compose up -d server agent
${EXEC} 'until kubectl wait --for=condition=ready node --all; do sleep 1; done' 2>/dev/null
${EXEC} 'until kubectl wait --for=condition=available deployment/coredns -n kube-system; do sleep 1; done' 2>/dev/null
${EXEC} 'until kubectl wait --for=condition=available deployment/metrics-server -n kube-system; do sleep 1; done' 2>/dev/null
${EXEC} 'until kubectl wait --for=condition=available deployment/traefik -n kube-system; do sleep 1; done' 2>/dev/null
echo

echo "### Setup Istio operator and gateway"
${ISTIOCTL} install --set profile=demo -y
${EXEC} 'kubectl label namespace default istio-injection=enabled'
${EXEC} 'kubectl apply -n default -f https://raw.githubusercontent.com/istio/istio/release-1.13/samples/bookinfo/platform/kube/bookinfo.yaml'
${EXEC} 'until kubectl wait --for=condition=available deploy -l app=details -n default; do sleep 1; done' 2>/dev/null
${EXEC} 'until kubectl wait --for=condition=available deploy -l app=productpage -n default; do sleep 1; done' 2>/dev/null
${EXEC} 'until kubectl wait --for=condition=available deploy -l app=ratings -n default; do sleep 1; done' 2>/dev/null
${EXEC} 'until kubectl wait --for=condition=available deploy -l app=reviews -n default; do sleep 1; done' 2>/dev/null
${EXEC} "kubectl exec $(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}') -c ratings -- curl -sS productpage:9080/productpage | grep -o \"<title>.*</title>\""
${EXEC} 'kubectl apply -n default -f https://raw.githubusercontent.com/istio/istio/release-1.13/samples/bookinfo/networking/bookinfo-gateway.yaml'
${ISTIOCTL} analyze
echo

echo "### Configuring addons"
${EXEC} 'kubectl apply -f https://github.com/istio/istio/raw/release-1.13/samples/addons/prometheus.yaml'
${EXEC} 'kubectl apply -f https://github.com/istio/istio/raw/release-1.13/samples/addons/kiali.yaml'
${EXEC} 'kubectl apply -f https://github.com/istio/istio/raw/release-1.13/samples/addons/jaeger.yaml'
${EXEC} 'kubectl apply -f https://github.com/istio/istio/raw/release-1.13/samples/addons/grafana.yaml'
${EXEC} 'kubectl rollout status deployment/kiali -n istio-system'
echo

END_TIME=`date "+%s"`

echo "### Setup time: $((${END_TIME} - ${START_TIME}))s"

echo "### Generate load"
export INGRESS_PORT=$(${EXEC} kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(${EXEC} kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')
export INGRESS_HOST=$(${EXEC} kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')
export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT

for i in $(seq 1 200); do curl -s -o /dev/null "http://$GATEWAY_URL/productpage"; done

echo "------------------"
echo "Run make kiali now!"
